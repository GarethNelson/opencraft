cmake_minimum_required(VERSION 2.8.3)

cmake_policy(SET CMP0004 OLD)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/CMakeFiles")

FIND_PACKAGE(Boost COMPONENTS system thread log log_setup)
FIND_PACKAGE(ZLIB REQUIRED)

set (CMAKE_CXX_STANDARD 11)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-narrowing -fpermissive")

ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS} ${ZLIB_INCLUDE_DIRS} ${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/test_data)

FILE(GLOB libopencraft_src ${CMAKE_SOURCE_DIR}/src/*.cpp)
FILE(GLOB libopencraft_test_src ${CMAKE_SOURCE_DIR}/test_src/*.cpp)

ADD_LIBRARY(opencraft SHARED ${libopencraft_src} ${CMAKE_SOURCE_DIR}/src/packets.autogen.cpp)
ADD_EXECUTABLE(bin2c ${CMAKE_SOURCE_DIR}/test_src/bin2c.c)
ADD_EXECUTABLE(test_opencraft ${libopencraft_test_src} )
ADD_EXECUTABLE(ping_server ${CMAKE_SOURCE_DIR}/examples/ping_server.cpp)
ADD_EXECUTABLE(ping_server_basic_client ${CMAKE_SOURCE_DIR}/examples/ping_server_basic_client.cpp)
ADD_EXECUTABLE(chat_client ${CMAKE_SOURCE_DIR}/examples/chat_client.cpp)


TARGET_LINK_LIBRARIES(opencraft pthread ${ZLIB_LIBRARIES} ${Boost_LIBRARIES})
TARGET_LINK_LIBRARIES(test_opencraft pthread ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/build/libopencraft.so)
TARGET_LINK_LIBRARIES(ping_server pthread ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/build/libopencraft.so)
TARGET_LINK_LIBRARIES(ping_server_basic_client pthread ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/build/libopencraft.so)
TARGET_LINK_LIBRARIES(chat_client pthread ${Boost_LIBRARIES} ${CMAKE_SOURCE_DIR}/build/libopencraft.so)

ADD_CUSTOM_COMMAND( OUTPUT ${CMAKE_SOURCE_DIR}/include/version.h ${CMAKE_SOURCE_DIR}/include/packets.autogen.h ${CMAKE_SOURCE_DIR}/src/packets.autogen.cpp ${CMAKE_SOURCE_DIR}/src/unpack_packet.inc
                    COMMAND ${CMAKE_SOURCE_DIR}/autogen.sh
                    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
                    COMMENT "Creating autogenerated packet code" )

add_custom_target(autogen_headers
                  DEPENDS ${CMAKE_SOURCE_DIR}/include/version.h ${CMAKE_SOURCE_DIR}/src/packets.autogen.cpp ${CMAKE_SOURCE_DIR}/src/unpack_packet.inc)

add_dependencies(opencraft autogen_headers)
add_dependencies(test_opencraft opencraft)
add_dependencies(ping_server opencraft)
add_dependencies(ping_server_basic_client opencraft)
add_dependencies(chat_client opencraft)
