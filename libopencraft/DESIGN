Basic features
  Packet serialisation/deserialisation
  Basic client with packet handler callbacks
  Basic server with packet handler callbacks

Basic client
  Provides methods for adding data received from the server socket and getting data that needs to be sent to the server

  Intended usage:
    Main loop polls server socket, if data is available for reading, pass to client instance
    Upon passing data for reading, if a packet is parsed, callbacks are executed

Spawning client
  Connects to a server, logs in and does enough handling (assuming on_recv/on_send called in loop) to spawn inworld

Packet classes
  Automatically generated from burger data
  Some packets may be manually defined instead of generated from burger data
  All packets inherit from opencraft::packets::base_packet

raw_packet encapsulation
  all packets may be wrapped inside a raw_packet by serialising the packet and then passing it to raw_packet's constructor
  raw packets may then be wrapped inside of zlib compression etc before final transmission

Basic usage:
  Create a TCP socket and a packet_stream instance
  Read from TCP socket, pass to packet_stream on_recv, iterate through the returned vector and handle the packets
  Create packets by passing relevant fields to the relevant classe's constructor then pack it and send it across the TCP socket
  Fields are assigned alphabetical names (i.e first is a, second is b and so on) unless proper field names have been defined
